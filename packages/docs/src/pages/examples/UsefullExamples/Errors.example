import { Component, ReactElement } from 'react';
import { configure } from '@yoskutik/react-vvm';

class ErrorBoundary extends Component<{ children: ReactElement }, { hasError: boolean }> {
  static getDerivedStateFromError(err: Error) {
    // I recommend you to log the error to avoid situations where you content is disappeared,
    // and you don't know the reason
    console.error(err);

    return {
      hasError: true,
    };
  }

  state = {
    hasError: false,
  };

  render() {
    return !this.state.hasError && this.props.children;
  };
}

configure({
  // That's it. And now if one of your components throws an error it will just disappear. At it
  // will be the only component that disappeared.
  Wrapper: ErrorBoundary,
});
